#!/usr/bin/env python

# J. Moustakas - 2014 Jun 11
#
# Based largely on a script written by G. Vernizzi called
# GVblendergadget.py.  This script assumes that gadget_snapshot2txt.py
# has already been run on your Gadget2 snapshots
#

# You *must* run this script from the 'txt' subdirectory generated by
# gadget_snapshot2txt.py.  After loading the blender module, (i.e.,
# "module load apps/blender-2.70a") run:
#    blender -b -P blendergadget.py

import numpy as np
import glob
import bpy
import bmesh

if __name__ == "__main__":

    starfiles = glob.glob('snapshot_*_stars.txt')
    gasfiles = glob.glob('snapshot_*_gas.txt')
    nsnap = len(starfiles) # assume to be the same for GASFILES

    for ii in range(nsnap):

# initialize blender
        bpy.ops.object.select_all()
        bpy.ops.object.select_all()
        bpy.ops.object.delete(use_global=False)   
        bpy.ops.mesh.primitive_circle_add(radius=1, location=(0,0,0))
        obj= bpy.data.objects['Circle']
        bpy.ops.object.mode_set(mode='EDIT')
        bpy.ops.mesh.merge(type='CENTER')
        bm=bmesh.from_edit_mesh(obj.data)

# read the particle data        
#       sfile = starfiles[ii]
#       gfile = gasfiles[ii]
#       xyz_stars = np.loadtxt(sfile)
#       xyz_gas = np.loadtxt(gfile)

        sfile = open(starfiles[ii],'r')
#       gfile = open(gasfiles[ii],'r')
#       jpgfile = starfiles[ii].replace('_stars.txt','.jpg')
        
# need to assign the vertices in a loop, unfortunately         
        for line in sfile:
            xyz = line.split()
            bm.verts.new((float(xyz[0]),float(xyz[1]),float(xyz[2])))
        
#       bm.verts.new(xyz_stars)

        bmesh.update_edit_mesh(obj.data)
        bpy.ops.object.mode_set(mode='OBJECT')

        mat = bpy.data.materials.new('HALO')
        mat.type= 'HALO'
        mat.halo.size=0.7
        txt=bpy.data.textures.new('yel','BLEND')
        mtex=mat.texture_slots.add()    
        mtex.color = (1, 0.788799, 0.193239)
        mtex.texture=txt
        
        bpy.context.object.data.materials.append(mat)
        bpy.context.scene.world.horizon_color=(0,0,0)
        
        bpy.ops.object.camera_add(view_align=True, enter_editmode=False, location=(200,0,400), rotation=(12.0/180*3.14,24.0/180*3.14,29.0/180*3.14))
        bpy.context.object.data.clip_end = 1000
        bpy.data.objects['Camera'].select=True

        bpy.data.scenes['Scene'].camera=bpy.data.objects[0]
        bpy.data.scenes['Scene'].render.filepath = "%09d.jpg" % (ii)
        bpy.ops.render.render( write_still=True ) 
        

#       ffmpeg -r 5 -i %09d.png -y disk1.mov
